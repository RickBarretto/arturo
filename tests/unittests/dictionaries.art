; DICTIONARY
; + VARIABLE REFERENCES
; the inner - dictionary - scope 
; should be able to read external variables
; but not be confused or altered them

country: "Spain"
entity: "EU"

location: #[
	continent: "Europe"
	country: "Greece"
	entity: entity
]

print location

; DICTIONARY
; + EMBEDDED VARIABLES
; the dictionary should be able 
; to inject outer fields/variable
; (with the same name and value)

location: #.with:['entity][
	continent: "Europe"
	country: "Spain"
]

print location

; DICTIONARY 
; IN A BLOCK

do [ 
    b: #[
        some: "value"
    ]
    print b
]

switch set? 'b [
	print b
][
	print "b: not set -> NOT CORRECT"
]

; DICTIONARY 
; RETURNED FROM A FUNCTION

getUser: function [x][
    surn: "Doe"
    #[
        name: x
        surname: surn
    ]
]

gu: getUser "John"
print gu